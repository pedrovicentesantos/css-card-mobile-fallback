:root {
  --clr-neutral-900: hsl(207, 19%, 9%);
  --clr-neutral-100: hsl(0, 0%, 100%);
  --clr-accent-400: hsl(142, 90%, 61%);
}

*, *::before, *::after {
  box-sizing: border-box;
}

body {
  display: grid;
  height: 100vh;
  place-items: center;
  line-height: 1.6;
  background: var(--clr-neutral-900);
  font-family: sans-serif;
}

.card {
  cursor: pointer;
  color: var(--clr-neutral-100);
  background-image: url('../assets/bg.jpg');
  background-size: cover;
  background-position: top;
  padding: 10rem 0 0;
  max-width: 35ch;
  border-radius: 0.5rem;
  overflow: hidden;

  transition: transform 500ms ease;
}

.card-content {
  --padding: 1.5rem;
  padding: var(--padding);
  background: linear-gradient(
    hsl(0 0% 0% / 0),
    hsl(20 0% 0% / 0.7) 40%,
    hsl(0 0% 0% / 1)
  );
}

.title {
  position: relative;
  width: max-content;
}

.title::after {
  content: "";
  position: absolute;
  height: 3px;
  width: calc(100% + var(--padding));
  left: calc(var(--padding) * -1);
  bottom: 0;
  background: var(--clr-accent-400);
  
  transform-origin: left;
  transition: transform 500ms ease;
}

.description {
  color: rgb(255 255 255 / 0.9);
}

.button {
  cursor: pointer;
  display: inline;
  text-decoration: none;
  color: var(--clr-neutral-900);
  background: var(--clr-accent-400);
  padding: 0.5em 1.25em;
  border-radius: 0.25rem;
}

@media (hover) {
  .card:hover, .card:focus-within {
    transform: scale(1.05);
  }

  .card-content {
    transform: translateY(65%);
    transition: transform 500ms ease;
  }
  
  .card:hover .card-content, .card:focus-within .card-content {
    transform: translateY(0%);
    transition-delay: 500ms;
  }
  
  .card:focus-within .card-content {
    transition-duration: 0ms;
  }
  
  .card-content > *:not(.title) {
    opacity: 0;
    transition: opacity 500ms linear;
  }
  
  .card:hover .card-content > *, .card:focus-within .card-content > * {
    opacity: 1;
    transition-delay: 800ms;
  }

  .title::after {
    transform: scaleX(0);
  }

  .card:hover .title::after, .card:focus-within .title::after {
    transform: scaleX(1);
  }

  .button:hover, .button:focus {
    background: var(--clr-neutral-100);
  }
}

@media (prefers-reduced-motion: reduce) {
  *, *::after, *::before {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    transition-delay: 0ms !important;
    scroll-behavior: auto !important;
  }
}